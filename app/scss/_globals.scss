@import "mixins";

html {
    // more accessible; lets user control the zoom level in browser
    font-size: 100%;
    // makes size of elements include padding in final width
    box-sizing: border-box;
}

//  ensures that elements and their pseudo-elements will adhere to the 
// box-sizing model set on their parent elements, allowing consistent 
// sizing calculations throughout the document.
*, *::before, *::after {
    box-sizing: inherit;
}

a, a:visited, a:hover {
    color: $grayishBlue;
    text-decoration: none;
}

body {
    margin: 0;
    padding: 0;
    font-family: 'Public Sans', sans-serif;
    line-height: 1.3;
    // for some reason, color doesn't register in the header
    color: $grayishBlue;
    font-size: $font-med;
    font-weight: 300;
}

// Flexbox styles
.flex {
    display: flex;

    &-jc-sb {
        justify-content: space-between;
    }

    &-jc-c {
        justify-content: center;
    }

    &-ai-c {
        align-items: center;
    }
}

// Buttons (gradient background, rounded corners)

button, .button {
    // top bottom goes first, left right goes second
    padding: 0.875rem 2.1875rem;
    background: linear-gradient(to right, $limeGreen, $brightCyan);
    border: 0;
    border-radius: 50px;
    cursor: pointer;
    color: $white;
    font-weight: 700;
    opacity: 1;
    transition: opacity 300ms ease-in-out;

    &:hover {
        opacity: 0.75;
    }
}

//Visibility
.hide-for-mobile {
    // hide for tablet and mobile devices
    @include breakpoint-down(medium) {
        display: none;
    }
}

.hide-for-desktop {
    // hide for desktop viewport widths
    @include breakpoint-up(large) {
        display: none;
    }
}